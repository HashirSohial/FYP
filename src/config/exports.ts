export const Address = "0x3c67fAEdf32A038C193c2d1FE205b2BaE44A46F3";
export const Abi = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vendorAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "productName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ProductAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vendorAddress",
        type: "address",
      },
      { indexed: false, internalType: "string", name: "name", type: "string" },
      {
        indexed: false,
        internalType: "string",
        name: "companyName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "joiningDate",
        type: "uint256",
      },
    ],
    name: "VendorRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "TotalProducts",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TotalVenders",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "_productName", type: "string" },
      { internalType: "string", name: "_description", type: "string" },
      { internalType: "uint256", name: "_price", type: "uint256" },
      { internalType: "uint256", name: "_stock", type: "uint256" },
      { internalType: "string", name: "_category", type: "string" },
    ],
    name: "addProduct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVendorAddresses",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "_code", type: "bytes32" }],
    name: "getProductAndVendorByCode",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "productId", type: "uint256" },
          { internalType: "string", name: "productName", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "stock", type: "uint256" },
          { internalType: "string", name: "category", type: "string" },
          { internalType: "uint256", name: "addedTime", type: "uint256" },
          { internalType: "bytes32", name: "productCode", type: "bytes32" },
        ],
        internalType: "struct FYP_Contract.Product",
        name: "",
        type: "tuple",
      },
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "companyName", type: "string" },
          { internalType: "uint256", name: "venderNumber", type: "uint256" },
          { internalType: "string", name: "venderEmail", type: "string" },
          { internalType: "string", name: "companyAddress", type: "string" },
          {
            internalType: "uint256",
            name: "registerationdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registerationtime",
            type: "uint256",
          },
          { internalType: "address", name: "vendorAddress", type: "address" },
          { internalType: "bool", name: "isRegistered", type: "bool" },
        ],
        internalType: "struct FYP_Contract.Vendor",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_index", type: "uint256" }],
    name: "getProductAndVendorByIndex",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "productId", type: "uint256" },
          { internalType: "string", name: "productName", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "stock", type: "uint256" },
          { internalType: "string", name: "category", type: "string" },
          { internalType: "uint256", name: "addedTime", type: "uint256" },
          { internalType: "bytes32", name: "productCode", type: "bytes32" },
        ],
        internalType: "struct FYP_Contract.Product",
        name: "",
        type: "tuple",
      },
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "companyName", type: "string" },
          { internalType: "uint256", name: "venderNumber", type: "uint256" },
          { internalType: "string", name: "venderEmail", type: "string" },
          { internalType: "string", name: "companyAddress", type: "string" },
          {
            internalType: "uint256",
            name: "registerationdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registerationtime",
            type: "uint256",
          },
          { internalType: "address", name: "vendorAddress", type: "address" },
          { internalType: "bool", name: "isRegistered", type: "bool" },
        ],
        internalType: "struct FYP_Contract.Vendor",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_vendor", type: "address" }],
    name: "getVendorProductCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_vendorAddress", type: "address" },
    ],
    name: "isVendorRegister",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "productCodeToVendor",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "_name", type: "string" },
      { internalType: "string", name: "_companyName", type: "string" },
      { internalType: "uint256", name: "_number", type: "uint256" },
      { internalType: "string", name: "_email", type: "string" },
      { internalType: "string", name: "_VenderCompanyAddress", type: "string" },
    ],
    name: "registerVendor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "registeredVendors",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_vendor", type: "address" }],
    name: "totalProductsOfVender",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "productId", type: "uint256" },
          { internalType: "string", name: "productName", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "stock", type: "uint256" },
          { internalType: "string", name: "category", type: "string" },
          { internalType: "uint256", name: "addedTime", type: "uint256" },
          { internalType: "bytes32", name: "productCode", type: "bytes32" },
        ],
        internalType: "struct FYP_Contract.Product[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVenderDetails",
    outputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "companyName", type: "string" },
          { internalType: "uint256", name: "venderNumber", type: "uint256" },
          { internalType: "string", name: "venderEmail", type: "string" },
          { internalType: "string", name: "companyAddress", type: "string" },
          {
            internalType: "uint256",
            name: "registerationdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registerationtime",
            type: "uint256",
          },
          { internalType: "address", name: "vendorAddress", type: "address" },
          { internalType: "bool", name: "isRegistered", type: "bool" },
        ],
        internalType: "struct FYP_Contract.Vendor[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "vendorProducts",
    outputs: [
      { internalType: "uint256", name: "productId", type: "uint256" },
      { internalType: "string", name: "productName", type: "string" },
      { internalType: "string", name: "description", type: "string" },
      { internalType: "uint256", name: "price", type: "uint256" },
      { internalType: "uint256", name: "stock", type: "uint256" },
      { internalType: "string", name: "category", type: "string" },
      { internalType: "uint256", name: "addedTime", type: "uint256" },
      { internalType: "bytes32", name: "productCode", type: "bytes32" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "vendors",
    outputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "string", name: "companyName", type: "string" },
      { internalType: "uint256", name: "venderNumber", type: "uint256" },
      { internalType: "string", name: "venderEmail", type: "string" },
      { internalType: "string", name: "companyAddress", type: "string" },
      { internalType: "uint256", name: "registerationdate", type: "uint256" },
      { internalType: "uint256", name: "registerationtime", type: "uint256" },
      { internalType: "address", name: "vendorAddress", type: "address" },
      { internalType: "bool", name: "isRegistered", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
];
